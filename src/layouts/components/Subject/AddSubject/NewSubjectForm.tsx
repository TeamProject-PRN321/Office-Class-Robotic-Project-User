import { Box, Button, Dialog, IconButton, InputAdornment, TextField, styled } from '@mui/material'

//import { Book, CloudUpload, Plus } from 'mdi-material-ui'

import * as React from 'react'

import DialogActions from '@mui/material/DialogActions'
import DialogTitle from '@mui/material/DialogTitle'
import CloseIcon from '@mui/icons-material/Close'
import { NumbersOutlined, SchoolOutlined } from '@mui/icons-material'
import axios from 'axios'
import useAxios from 'src/@core/hooks/useAxios'
import { toast } from 'react-toastify'
import { Plus } from 'mdi-material-ui'

const BootstrapDialog = styled(Dialog)(({ theme }) => ({
  '& .MuiDialogContent-root': {
    padding: theme.spacing(2)
  },
  '& .MuiDialogActions-root': {
    padding: theme.spacing(1)
  }
}))

// const VisuallyHiddenInput = styled('input')({
//   clip: 'rect(0 0 0 0)',
//   clipPath: 'inset(50%)',
//   height: 1,
//   overflow: 'hidden',
//   position: 'absolute',
//   bottom: 0,
//   left: 0,
//   whiteSpace: 'nowrap',
//   width: 1
// })

// Generated by https://quicktype.io

export interface SubjectCreatingModel {
  subjectName: string
  totalSlots: number
  giaoTrinhDTO: GiaoTrinhDTO
}

export interface GiaoTrinhDTO {
  giaoTrinhName: string
  description: string
  filePDF: any | any[] | null
}

// Generated by https://quicktype.io

export interface ErrorModel {
  errors: null
  type: string
  title: string
  status: number
  detail: null
  instance: null
}

const initial = {
  subjectName: '',
  totalSlots: 0,
  giaoTrinhDTO: {
    giaoTrinhName: '',
    description: ''
  }
} as SubjectCreatingModel

// Generated by https://quicktype.io

export interface SubjectModels {
  subjectName: string
  totalSlots: number
}

const subjectItem = {
  subjectName: '',
  totalSlots: 0
} as SubjectModels

const API_UPLOAD_NEW_SUBJECT = '/api/v1/subject/add'

export default function NewSubjectForm({ callBackCreate }: { callBackCreate: () => void }) {
  const [open, setOpen] = React.useState(false)
  const [subject, setSubject] = React.useState<SubjectCreatingModel>(initial)
  const [subjectsModel, setSubjectModel] = React.useState<SubjectModels>(subjectItem)

  const axiosClient = useAxios()

  const handleClickOpen = () => {
    setOpen(true)
  }

  const handleClose = () => {
    setOpen(false)
    setSubject(initial)
    setSubjectModel(subjectItem)
  }

  const handleSubmit = async () => {
    try {
      const imageUrl = await handleUploadFile()
      console.log(imageUrl)

      const response = await axiosClient.call(
        'post',
        API_UPLOAD_NEW_SUBJECT,

        // {
        //   ...subject,
        //   giaoTrinhDTO: {
        //     ...subject.giaoTrinhDTO,
        //     filePDF: imageUrl
        //   }
        // } as SubjectCreatingModel,
        subjectsModel,
        true
      )

      if (response) {
        handleClose()
        toast.success('Created successfully!!!')
        callBackCreate()
      }
    } catch (error: any) {
      console.log(error?.response.data)
      const title = (error?.response.data as ErrorModel).title
      if (title) {
        toast.error(title)
      }
    }
  }

  const handleUploadFile = async () => {
    try {
      const formData = new FormData()
      formData.append('pdf', subject.giaoTrinhDTO.filePDF?.at(0))
      const response = await axios.post('http://localhost:3000/api/upload', formData)
      console.log(response.data.done[0])

      return response.data.done[0].filepath.split('\\public')[1]
    } catch (error) {
      console.log(error)
    }
  }

  return (
    <React.Fragment>
      <Button
        sx={{
          backgroundColor: '#5681f1',
          color: 'white',
          fontWeight: 'bold',
          fontSize: '13px',
          ':hover': {
            backgroundColor: '#816EA5',
            color: 'white'
          }
        }}
        onClick={() => {
          handleClickOpen()
        }}
      >
        <Plus sx={{ margin: '2px', fontSize: '16px' }}></Plus>
        Add Schedule
      </Button>

      {/* Dialog */}
      <BootstrapDialog onClose={handleClose} aria-labelledby='customized-dialog-title' open={open}>
        <DialogTitle
          sx={{ m: 0, p: 2, color: 'black', fontWeight: 'bold', fontSize: '50px', textAlign: 'center' }}
          id='customized-dialog-title'
        >
          Add new Subject
        </DialogTitle>
        <IconButton
          aria-label='close'
          onClick={handleClose}
          sx={{
            position: 'absolute',
            right: 8,
            top: 8,
            color: theme => theme.palette.grey[500]
          }}
        >
          <CloseIcon />
        </IconButton>

        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '2' }}>
          <TextField
            label='Subject Name'
            id='outlined-start-adornment'
            placeholder='Please enter subject name'
            sx={{ m: 2, width: '65ch', fontSize: '15px' }}
            InputProps={{
              startAdornment: (
                <InputAdornment position='start'>
                  <SchoolOutlined></SchoolOutlined>
                </InputAdornment>
              )
            }}
            value={subjectsModel.subjectName}
            onChange={e => {
              setSubjectModel({
                ...subjectsModel,
                subjectName: e.target.value
              })
            }}
          />
          <TextField
            label='Total slot'
            type='number'
            id='outlined-start-adornment'
            placeholder='Total slot'
            sx={{ m: 2, width: '65ch', fontSize: '15px' }}
            InputProps={{
              startAdornment: (
                <InputAdornment position='start'>
                  <NumbersOutlined></NumbersOutlined>
                </InputAdornment>
              )
            }}
            value={subjectsModel.totalSlots}
            onChange={e => {
              setSubjectModel({
                ...subjectsModel,
                totalSlots: +e.target.value || 0
              })
            }}
          />

          {/* <TextField
            label='Curriculum Name'
            id='outlined-start-adornment'
            placeholder='curriculum Name'
            sx={{ m: 2, width: '65ch', fontSize: '15px' }}
            InputProps={{
              startAdornment: (
                <InputAdornment position='start'>
                  <Book></Book>
                </InputAdornment>
              )
            }}
            value={subject.giaoTrinhDTO.giaoTrinhName}
            onChange={e => {
              setSubject({
                ...subject,
                giaoTrinhDTO: {
                  ...subject.giaoTrinhDTO,
                  giaoTrinhName: e.target.value
                }
              })
            }}
          />
          <TextField
            label='Description'
            multiline
            id='outlined-start-adornment'
            placeholder='Description detail ...'
            sx={{ m: 2, width: '65ch', fontSize: '15px' }}
            InputProps={{
              startAdornment: (
                <InputAdornment position='start'>
                  <Book></Book>
                </InputAdornment>
              )
            }}
            value={subject.giaoTrinhDTO.description}
            onChange={e => {
              setSubject({
                ...subject,
                giaoTrinhDTO: {
                  ...subject.giaoTrinhDTO,
                  description: e.target.value
                }
              })
            }}
          />
          <Button
            component='label'
            role={undefined}
            variant='contained'
            tabIndex={-1}
            startIcon={<CloudUpload />}
            sx={{
              backgroundColor: '#B9C6BB',
              m: 2,
              width: '600px',
              alignItems: 'center',
              textAlign: 'center',
              fontSize: '15px'
            }}
          >
            Upload file PDF
            <VisuallyHiddenInput
              type='file'
              onChange={e =>
                setSubject({
                  ...subject,
                  giaoTrinhDTO: {
                    ...subject.giaoTrinhDTO,
                    filePDF: [...(e.currentTarget.files || [])]
                  }
                })
              }
            />
          </Button> */}
        </Box>

        <Box sx={{ display: 'flex', justifyContent: 'center', margin: '10px' }}>
          <DialogActions>
            <Button
              sx={{
                backgroundColor: '#9155fd',
                color: 'white',
                ':hover': { backgroundColor: '#008BC5', color: 'white' },
                justifyContent: 'center'
              }}
              autoFocus
              onClick={handleSubmit}
            >
              Save changes
            </Button>
          </DialogActions>
        </Box>
      </BootstrapDialog>
    </React.Fragment>
  )
}
